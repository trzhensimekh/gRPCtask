// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/grpctask.proto

package grpctask

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	FirstName            string   `protobuf:"bytes,2,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName             string   `protobuf:"bytes,3,opt,name=LastName,proto3" json:"LastName,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=Email,proto3" json:"Email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4e05a9a5a53bfd, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type Request struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4e05a9a5a53bfd, []int{1}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Response struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=Users,proto3" json:"Users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4e05a9a5a53bfd, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type EditRequest struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EditRequest) Reset()         { *m = EditRequest{} }
func (m *EditRequest) String() string { return proto.CompactTextString(m) }
func (*EditRequest) ProtoMessage()    {}
func (*EditRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4e05a9a5a53bfd, []int{3}
}

func (m *EditRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditRequest.Unmarshal(m, b)
}
func (m *EditRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditRequest.Marshal(b, m, deterministic)
}
func (m *EditRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditRequest.Merge(m, src)
}
func (m *EditRequest) XXX_Size() int {
	return xxx_messageInfo_EditRequest.Size(m)
}
func (m *EditRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EditRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EditRequest proto.InternalMessageInfo

func (m *EditRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "grpctask.User")
	proto.RegisterType((*Request)(nil), "grpctask.Request")
	proto.RegisterType((*Response)(nil), "grpctask.Response")
	proto.RegisterType((*EditRequest)(nil), "grpctask.EditRequest")
}

func init() { proto.RegisterFile("pb/grpctask.proto", fileDescriptor_0f4e05a9a5a53bfd) }

var fileDescriptor_0f4e05a9a5a53bfd = []byte{
	// 392 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x90, 0xcf, 0xae, 0xd2, 0x40,
	0x14, 0xc6, 0xd3, 0x3f, 0xf7, 0x5a, 0x4e, 0x13, 0x22, 0x27, 0x6a, 0x9a, 0x7a, 0x35, 0x64, 0xe2,
	0x82, 0xdc, 0x45, 0xab, 0xb8, 0x63, 0x89, 0x80, 0x69, 0x24, 0x2c, 0xaa, 0x3c, 0xc0, 0x40, 0x0f,
	0x64, 0x22, 0xb4, 0xb5, 0x33, 0x35, 0x21, 0xc6, 0x8d, 0x7b, 0x57, 0x3e, 0x9a, 0xaf, 0xe0, 0x83,
	0x98, 0xce, 0x94, 0x3f, 0xca, 0x4a, 0x57, 0xed, 0x77, 0xbe, 0xf9, 0x7e, 0x33, 0xe7, 0x83, 0x5e,
	0xb9, 0x8a, 0xb7, 0x55, 0xb9, 0x56, 0x5c, 0x7e, 0x8c, 0xca, 0xaa, 0x50, 0x05, 0x7a, 0x47, 0x1d,
	0xde, 0x6d, 0x8b, 0x62, 0xbb, 0xa3, 0x98, 0x97, 0x22, 0xe6, 0x79, 0x5e, 0x28, 0xae, 0x44, 0x91,
	0x4b, 0x73, 0x2e, 0x7c, 0xda, 0xba, 0x5a, 0xad, 0xea, 0x4d, 0x4c, 0xfb, 0x52, 0x1d, 0x8c, 0xc9,
	0x36, 0xe0, 0x2e, 0x25, 0x55, 0xd8, 0x05, 0x3b, 0xc9, 0x02, 0xab, 0x6f, 0x0d, 0x9c, 0xd4, 0x4e,
	0x32, 0xbc, 0x83, 0xce, 0x4c, 0x54, 0x52, 0x2d, 0xf8, 0x9e, 0x02, 0xbb, 0x6f, 0x0d, 0x3a, 0xe9,
	0x79, 0x80, 0x21, 0x78, 0x73, 0xde, 0x9a, 0x8e, 0x36, 0x4f, 0x1a, 0x1f, 0xc1, 0xcd, 0x74, 0xcf,
	0xc5, 0x2e, 0x70, 0xb5, 0x61, 0x04, 0x7b, 0x06, 0x0f, 0x52, 0xfa, 0x54, 0x93, 0x54, 0x88, 0xe0,
	0xe6, 0x4d, 0xd0, 0xd2, 0xbe, 0xfe, 0x67, 0x2f, 0xc1, 0x4b, 0x49, 0x96, 0x45, 0x2e, 0x09, 0x5f,
	0xc0, 0x4d, 0xf3, 0x24, 0x19, 0x58, 0x7d, 0x67, 0xe0, 0x0f, 0xbb, 0xd1, 0x69, 0xef, 0x66, 0x9c,
	0x1a, 0x93, 0xbd, 0x02, 0x7f, 0x9a, 0x09, 0x75, 0x84, 0x32, 0x70, 0x6b, 0x49, 0x95, 0x86, 0x5e,
	0x67, 0xb4, 0x37, 0xfc, 0xee, 0x80, 0xdf, 0xc8, 0xf7, 0x54, 0x7d, 0x16, 0x6b, 0xc2, 0x31, 0x74,
	0xe6, 0x42, 0x2a, 0xcd, 0xc3, 0xde, 0x39, 0xd2, 0x32, 0x43, 0xbc, 0x1c, 0x99, 0xc7, 0xb1, 0xee,
	0xb7, 0x9f, 0xbf, 0x7e, 0xd8, 0x1e, 0xde, 0xc6, 0xb5, 0x8e, 0xbd, 0x05, 0x78, 0x53, 0x11, 0x57,
	0x64, 0x5a, 0xfc, 0xf3, 0xde, 0xf0, 0x49, 0x64, 0xba, 0x8f, 0x8e, 0xdd, 0x47, 0xd3, 0xa6, 0x7b,
	0xd6, 0xd3, 0x14, 0x9f, 0xb5, 0x94, 0x91, 0x75, 0x8f, 0x1f, 0xc0, 0x5f, 0x96, 0x19, 0x57, 0x94,
	0x8d, 0x0f, 0xc9, 0x04, 0x1f, 0x9f, 0x49, 0x17, 0x6b, 0x86, 0x7f, 0x5d, 0xc0, 0x9e, 0x6b, 0x50,
	0x10, 0x3e, 0x34, 0xa0, 0xf8, 0x4b, 0xf3, 0x89, 0x92, 0xec, 0xeb, 0x48, 0xaf, 0x8c, 0x0b, 0xf0,
	0x27, 0xb4, 0xa3, 0x7f, 0xa4, 0x06, 0x9a, 0x8a, 0xf7, 0x57, 0x54, 0x7c, 0x07, 0xde, 0x4c, 0xe4,
	0xff, 0x03, 0xc3, 0x2b, 0xd8, 0xea, 0x56, 0xb7, 0xf2, 0xfa, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x96, 0xc9, 0x0e, 0xa1, 0xdc, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	ListUsers(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	CreateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdatedByID(ctx context.Context, in *EditRequest, opts ...grpc.CallOption) (*User, error)
	DeletedByID(ctx context.Context, in *EditRequest, opts ...grpc.CallOption) (*User, error)
	FindByID(ctx context.Context, in *EditRequest, opts ...grpc.CallOption) (*User, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) ListUsers(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpctask.UserService/ListUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) CreateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpctask.UserService/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdatedByID(ctx context.Context, in *EditRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/grpctask.UserService/UpdatedByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DeletedByID(ctx context.Context, in *EditRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/grpctask.UserService/DeletedByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) FindByID(ctx context.Context, in *EditRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/grpctask.UserService/FindByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	ListUsers(context.Context, *Request) (*Response, error)
	CreateUser(context.Context, *User) (*empty.Empty, error)
	UpdatedByID(context.Context, *EditRequest) (*User, error)
	DeletedByID(context.Context, *EditRequest) (*User, error)
	FindByID(context.Context, *EditRequest) (*User, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) ListUsers(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUsers not implemented")
}
func (*UnimplementedUserServiceServer) CreateUser(ctx context.Context, req *User) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (*UnimplementedUserServiceServer) UpdatedByID(ctx context.Context, req *EditRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatedByID not implemented")
}
func (*UnimplementedUserServiceServer) DeletedByID(ctx context.Context, req *EditRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletedByID not implemented")
}
func (*UnimplementedUserServiceServer) FindByID(ctx context.Context, req *EditRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindByID not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_ListUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ListUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpctask.UserService/ListUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ListUsers(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpctask.UserService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreateUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdatedByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdatedByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpctask.UserService/UpdatedByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdatedByID(ctx, req.(*EditRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_DeletedByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).DeletedByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpctask.UserService/DeletedByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).DeletedByID(ctx, req.(*EditRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_FindByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).FindByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpctask.UserService/FindByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).FindByID(ctx, req.(*EditRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpctask.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListUsers",
			Handler:    _UserService_ListUsers_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _UserService_CreateUser_Handler,
		},
		{
			MethodName: "UpdatedByID",
			Handler:    _UserService_UpdatedByID_Handler,
		},
		{
			MethodName: "DeletedByID",
			Handler:    _UserService_DeletedByID_Handler,
		},
		{
			MethodName: "FindByID",
			Handler:    _UserService_FindByID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/grpctask.proto",
}
